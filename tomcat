#!/bin/bash
# 
# @author: William Panting
# This is a conglomeration of works by Steve Young, UPEI, Adam Vessey, Jason MacWilliams

# it's a service!
# chkconfig: 2345 95 15
# description: Tomcat; with Islandora stack.

#bring in environment variables
uname -a | grep "Ubuntu"
if [ $? ] ; then
. /etc/environment
else
. /mnt/islandora/env.sh
fi

# this can mitigate some logging issus with Djatoka and gsearch
cd $CATALINA_HOME/logs
export PWD=$CATALINA_HOME/logs

#ping mysql (network incase not on this box) with CORRECT creds... to know if it is running wait 5 try 3 fail
#might be albe to minimize security isses by using a dedicated 'ping account'

if [ $FEDORA_USER ] ; then
  LAUNCH_CMD="sudo -u $FEDORA_USER"
  echo "Using fedora user: $FEDORA_USER"
else
  #****** CHECK FOR ROOT STATUS AND BLOCK IT ******#
  ASROOT=0 # a flag to force "run as root"
  for var in "$@"; do
    case $var in
      "-r")
        ASROOT=1
        ;;
    esac
  done

  # check for root status
  if [[ $EUID -eq 0 && $ASROOT -eq 0 ]]; then
    echo "It looks like you're trying to run this script as root"
    echo "This is not normally allowed, to force it use $0 -r"
    exit 1
  fi
  #run as the current user if not forced to run as root and no $FEDORA_USER set#
  LAUNCH_CMD=
fi

PID_SEARCH="pgrep -nf $FEDORA_HOME.*fedora"

start()
{
  if [ `$PID_SEARCH` ]; then
    echo "Fedora already running! Try running with \"force-start\" if you know for certain it is not running."
  else
    force-start
  fi
}

force-start()
{
  echo "> Starting..."
  $LAUNCH_CMD $CATALINA_HOME/bin/startup.sh
  #Kinda weak, but should work well enough...
  echo "Waiting for server startup to complete"
  sleep 2
  while [ ! `$PID_SEARCH` ]; do
    sleep 0.5
  done
}

stop()
{
  echo "> Stopping..."
  if [ -f $PID_FILE ]; then
    PID=`cat $PID_FILE`
    rm $PID_FILE # done with this
  fi

  if [ -z $PID ]; then
    echo "Lock file missing!  Retrieving process id from pgrep"
    PID=`$PID_SEARCH`
  fi

  if [ ! -z $PID ]; then
    $LAUNCH_CMD $CATALINA_HOME/bin/shutdown.sh
    echo "Waiting for server shutdown to complete"
    sleep 2
    while ps -p $PID > /dev/null;
      do sleep 0.5
    done
  else
    echo "Fedora is not currently running, you can start it with `basename $0` start"
  fi
}

status()
{
  PID=`$PID_SEARCH`
  if [ -z $PID ]; then
    PID=0
  fi
  if [ -r "$PID_FILE" ]; then
    FID=`cat $PID_FILE`
  else
    FID=0
  fi

  # more expansive check for status
  if [[ $PID -eq 0 && $FID -eq 0 ]]; then
    # not running
    echo "Fedora is not currently running, you can start it with $0 start"
  elif [[ $PID -eq 0 && $FID -ne 0 ]]; then
    # shutdown error - delete lock file
    echo "Fedora is curret *not* running, but the lockfile is still in place - deleting it now"
    rm $PID_FILE
  elif [[ $PID -ne $FID ]]; then
    # running, but lockfile doesn't agree with system
    # what to do here? kill it? restart it?
    echo "Fedora is running (PID=$PID) but the lockfile does not agree - it might be broken"
    echo "You can try to stop it with '$0 stop' or 'kill -9 $PID'"
  elif [[ $PID -eq $FID ]]; then
    # running
    echo "Fedora is up and running with PID="$PID
  fi

}

case "$1" in
  start) start ;;
  force-start) force-start ;;
  stop) stop ;;
  restart) stop ; start ;;
  status) status ;;
  *)
    echo "Usage: `basename $0` {start|stop|status|restart|force-start}"
    exit 2
  ;;
esac

exit $?
